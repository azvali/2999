/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Guis;

import java.awt.Image;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import static java.lang.String.format;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JViewport;

/**
 *
 * @author harsi
 */
public class Dinner extends javax.swing.JFrame {
    /**
     * Creates new form Dinner
     */
    public Dinner() {
        initComponents();  
        UpdateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        dinnerIngredientsPane = new javax.swing.JScrollPane();
        dinnerIngredients = new javax.swing.JTextArea();
        dinnerHowToPane = new javax.swing.JScrollPane();
        dinnerHowToPane.setViewportView(dinnerHowTo);
        dinnerHowToPane.getVerticalScrollBar().setValue(0);
        dinnerHowTo = new javax.swing.JTextArea();
        dinnerDescriptionPane = new javax.swing.JScrollPane();
        dinnerDescription = new javax.swing.JTextArea();
        dinnerCookTimesPane = new javax.swing.JScrollPane();
        dinnerCookTimes = new javax.swing.JTextArea();
        dinnerReturnButton = new javax.swing.JButton();
        dinner = new javax.swing.JLabel();
        dinnerDropDown = new javax.swing.JComboBox<>();
        dinner_image = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bookmark_btn = new javax.swing.JButton();
        dinnerimage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 800));
        setMinimumSize(new java.awt.Dimension(1000, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 800));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 800));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 800));
        jPanel1.setLayout(null);

        dinnerIngredientsPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        dinnerIngredientsPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dinnerIngredientsPane.setFocusable(false);

        dinnerIngredients.setEditable(false);
        dinnerIngredients.setBackground(new java.awt.Color(204, 204, 204));
        dinnerIngredients.setColumns(20);
        dinnerIngredients.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dinnerIngredients.setLineWrap(true);
        dinnerIngredients.setRows(5);
        dinnerIngredients.setWrapStyleWord(true);
        dinnerIngredients.setMaximumSize(new java.awt.Dimension(270, 450));
        dinnerIngredients.setMinimumSize(new java.awt.Dimension(270, 450));
        dinnerIngredientsPane.setViewportView(dinnerIngredients);

        jPanel1.add(dinnerIngredientsPane);
        dinnerIngredientsPane.setBounds(720, 330, 270, 450);

        dinnerHowToPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        dinnerHowToPane.setColumnHeaderView(null);
        dinnerHowToPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dinnerHowToPane.setFocusCycleRoot(true);
        dinnerHowToPane.setFocusable(false);
        dinnerHowToPane.setHorizontalScrollBar(null);
        dinnerHowToPane.setRowHeaderView(null);
        dinnerHowToPane.setViewportView(null);

        dinnerHowTo.setEditable(false);
        dinnerHowTo.setBackground(new java.awt.Color(204, 204, 204));
        dinnerHowTo.setColumns(20);
        dinnerHowTo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dinnerHowTo.setLineWrap(true);
        dinnerHowTo.setRows(5);
        dinnerHowTo.setWrapStyleWord(true);
        dinnerHowTo.setFocusable(false);
        dinnerHowTo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dinnerHowToPropertyChange(evt);
            }
        });
        dinnerHowToPane.setViewportView(dinnerHowTo);

        jPanel1.add(dinnerHowToPane);
        dinnerHowToPane.setBounds(20, 330, 680, 450);

        dinnerDescriptionPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        dinnerDescriptionPane.setFocusable(false);

        dinnerDescription.setEditable(false);
        dinnerDescription.setBackground(new java.awt.Color(204, 204, 204));
        dinnerDescription.setColumns(20);
        dinnerDescription.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dinnerDescription.setLineWrap(true);
        dinnerDescription.setRows(5);
        dinnerDescription.setWrapStyleWord(true);
        dinnerDescriptionPane.setViewportView(dinnerDescription);

        jPanel1.add(dinnerDescriptionPane);
        dinnerDescriptionPane.setBounds(320, 150, 380, 140);

        dinnerCookTimesPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        dinnerCookTimesPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        dinnerCookTimesPane.setFocusable(false);

        dinnerCookTimes.setEditable(false);
        dinnerCookTimes.setBackground(new java.awt.Color(204, 204, 204));
        dinnerCookTimes.setColumns(20);
        dinnerCookTimes.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dinnerCookTimes.setLineWrap(true);
        dinnerCookTimes.setRows(5);
        dinnerCookTimes.setWrapStyleWord(true);
        dinnerCookTimesPane.setViewportView(dinnerCookTimes);

        jPanel1.add(dinnerCookTimesPane);
        dinnerCookTimesPane.setBounds(720, 150, 270, 140);

        dinnerReturnButton.setText("Return");
        dinnerReturnButton.setName("dinnerReturnButton"); // NOI18N
        dinnerReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dinnerReturnButtonActionPerformed(evt);
            }
        });
        jPanel1.add(dinnerReturnButton);
        dinnerReturnButton.setBounds(800, 80, 90, 23);

        dinner.setBackground(new java.awt.Color(153, 255, 153));
        dinner.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        dinner.setForeground(new java.awt.Color(102, 255, 153));
        dinner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dinner.setText("Dinner Recipes");
        jPanel1.add(dinner);
        dinner.setBounds(360, 0, 270, 40);

        dinnerDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dinnerDropDownActionPerformed(evt);
            }
        });
        jPanel1.add(dinnerDropDown);
        dinnerDropDown.setBounds(270, 80, 230, 22);
        jPanel1.add(dinner_image);
        dinner_image.setBounds(20, 150, 280, 140);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("COOK TIME");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(740, 120, 230, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DESCRIPTION");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(400, 120, 230, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("INGREDIENTS");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(750, 300, 230, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("INSTRUCTIONS");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(250, 300, 230, 30);

        bookmark_btn.setText("Bookmark");
        bookmark_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookmark_btnActionPerformed(evt);
            }
        });
        jPanel1.add(bookmark_btn);
        bookmark_btn.setBounds(580, 80, 140, 23);

        dinnerimage.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir") +"\\src\\main\\java\\Guis\\images\\background4.png"));
        jPanel1.add(dinnerimage);
        dinnerimage.setBounds(0, 0, 1000, 800);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dinnerReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dinnerReturnButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        AllRecipes a = new AllRecipes();
        a.setVisible(true);
    }//GEN-LAST:event_dinnerReturnButtonActionPerformed

    private void dinnerDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dinnerDropDownActionPerformed
        //combo box function
        //database connection details
        String host = "jdbc:mysql://csi2999.mysql.database.azure.com:3306/login";
        int port = 3306;
        String DatabaseUsername = "csi2999";
        String DatabasePassword = "bhl7^W0O#qq2";
        String Database = "login";
    try{
        Connection conn = DriverManager.getConnection(host, DatabaseUsername, DatabasePassword);
        Statement stm = conn.createStatement();
                        String item = (String)dinnerDropDown.getSelectedItem();
                        ResultSet rs = stm.executeQuery("SELECT * FROM recipes.dinner WHERE recipe_name = '"+item+"'");
                        if (rs.next()){
                        byte[] imagedata = rs.getBytes("recipe_image");
                        ImageIcon format = new ImageIcon(imagedata);
                        dinner_image.setIcon(format);
                        dinnerDescription.setText(rs.getString("description"));
                        dinnerHowTo.setText(rs.getString("how_to_cook"));
                        dinnerCookTimes.setText(rs.getString("cook_time"));
                        dinnerIngredients.setText(rs.getString("ingredients"));
                        conn.close();}
        } 
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }      
    }//GEN-LAST:event_dinnerDropDownActionPerformed

    private void dinnerHowToPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dinnerHowToPropertyChange
       
    }//GEN-LAST:event_dinnerHowToPropertyChange

    private void bookmark_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookmark_btnActionPerformed
        String host = "jdbc:mysql://csi2999.mysql.database.azure.com:3306/login";
        int port = 3306;
        String DatabaseUsername = "csi2999";
        String DatabasePassword = "bhl7^W0O#qq2";
        String Database = "login";
        String username = Login.userEntry;
    try{
        Connection conn = DriverManager.getConnection(host, DatabaseUsername, DatabasePassword);
        Statement stm = conn.createStatement();
                        String item = (String)dinnerDropDown.getSelectedItem();
                        ResultSet rs = stm.executeQuery("SELECT * FROM recipes.dinner WHERE recipe_name = '"+item+"'");
                        if (rs.next()){
                        String checkQuery = "SELECT username FROM bookmarks.bookmark WHERE username = ? AND recipe_name = '"+item+"'";
                        PreparedStatement checkStmt = conn.prepareStatement(checkQuery);
                        checkStmt.setString(1, username);
                        ResultSet resultSet = checkStmt.executeQuery();
                            if (resultSet.next()) {
                                JOptionPane.showMessageDialog(null,"Bookmark already exists!");}
                            else{
                            stm.executeUpdate("INSERT INTO bookmarks.bookmark(username, recipe_name) VALUES('"+username+"', '"+item+"')");
                            JOptionPane.showMessageDialog(null,"Bookmark added!");}        
                        conn.close();
                        }
    }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }      
    }//GEN-LAST:event_bookmark_btnActionPerformed
private void UpdateCombo(){
        //gather all information from dinner table
        String sql = "select * from recipes.dinner";
        
        //database connection details
        String host = "jdbc:mysql://csi2999.mysql.database.azure.com:3306/login";
        int port = 3306;
        String DatabaseUsername = "csi2999";
        String DatabasePassword = "bhl7^W0O#qq2";
        String Database = "login";

        //try block to execute the sql query to get all info from dinner table
        try{
            //create connection
            Connection conn = DriverManager.getConnection(host, DatabaseUsername, DatabasePassword);
            
            // execute query
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            
            //add names to combo box
            while(rs.next()){
                dinnerDropDown.addItem(rs.getString("recipe_name"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dinner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dinner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dinner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dinner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dinner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookmark_btn;
    private javax.swing.JLabel dinner;
    private javax.swing.JTextArea dinnerCookTimes;
    private javax.swing.JScrollPane dinnerCookTimesPane;
    private javax.swing.JTextArea dinnerDescription;
    private javax.swing.JScrollPane dinnerDescriptionPane;
    private javax.swing.JComboBox<String> dinnerDropDown;
    private javax.swing.JTextArea dinnerHowTo;
    private javax.swing.JScrollPane dinnerHowToPane;
    private javax.swing.JTextArea dinnerIngredients;
    private javax.swing.JScrollPane dinnerIngredientsPane;
    private javax.swing.JButton dinnerReturnButton;
    private javax.swing.JLabel dinner_image;
    private javax.swing.JLabel dinnerimage;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
